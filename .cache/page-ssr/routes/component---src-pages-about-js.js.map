{"version":3,"file":"component---src-pages-about-js.js","mappings":"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","sources":["webpack://sandun/./node_modules/gatsby-plugin-google-gtag/index.js","webpack://sandun/../src/image-utils.ts","webpack://sandun/../src/components/hooks.ts","webpack://sandun/../src/components/picture.tsx","webpack://sandun/../src/components/placeholder.tsx","webpack://sandun/../src/components/main-image.tsx","webpack://sandun/../src/components/layout-wrapper.tsx","webpack://sandun/../src/components/gatsby-image.server.tsx","webpack://sandun/../src/components/static-image.server.tsx","webpack://sandun/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://sandun/./src/components/layout.js","webpack://sandun/./src/pages/about.js","webpack://sandun/./src/styles/components/layout.scss","webpack://sandun/./src/styles/pages/about.scss","webpack://sandun/./node_modules/@babel/runtime/helpers/extends.js","webpack://sandun/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.OutboundLink = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _excluded = [\"children\"];\n\nvar OutboundLink = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n  return /*#__PURE__*/_react.default.createElement(\"a\", (0, _extends2.default)({\n    ref: ref\n  }, props, {\n    onClick: function onClick(e) {\n      if (typeof props.onClick === \"function\") {\n        props.onClick(e);\n      }\n\n      var redirect = true;\n\n      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey || e.defaultPrevented) {\n        redirect = false;\n      }\n\n      if (props.target && props.target.toLowerCase() !== \"_self\") {\n        redirect = false;\n      }\n\n      if (window.gtag) {\n        window.gtag(\"event\", \"click\", {\n          event_category: \"outbound\",\n          event_label: props.href,\n          transport_type: redirect ? \"beacon\" : \"\",\n          event_callback: function event_callback() {\n            if (redirect) {\n              document.location = props.href;\n            }\n          }\n        });\n      } else {\n        if (redirect) {\n          document.location = props.href;\n        }\n      }\n\n      return false;\n    }\n  }), children);\n});\n\nexports.OutboundLink = OutboundLink;\nOutboundLink.propTypes = {\n  href: _propTypes.default.string,\n  target: _propTypes.default.string,\n  onClick: _propTypes.default.func\n};","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React from \"react\"\r\nimport \"../styles/components/layout.scss\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { OutboundLink } from \"gatsby-plugin-google-gtag\"\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n    return (\r\n        <>\r\n            <Helmet htmlAttributes={{ lang: \"en\" }}>\r\n                <meta charSet=\"utf-8\" name=\"Sandun Sameera\"/>\r\n                <title>Sandun</title>\r\n                <link rel=\"canonical\" href=\"https://sandun.xyz/\"/>\r\n            </Helmet>\r\n            <div className=\"content\">\r\n                <div className=\"header\">\r\n                    <h2>Sandun Sameera</h2>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"navbar\">\r\n                        {/*<Link to=\"/\">Home<some_code/Link>*/}\r\n                        <OutboundLink href=\"/\">Home</OutboundLink>\r\n                        {/*<Link to=\"/experience\">Experience</Link>*/}\r\n                        <OutboundLink href=\"/experience\">Experience</OutboundLink>\r\n                        {/*<Link to=\"/projects\">Projects</Link>*/}\r\n                        <OutboundLink href=\"/projects\">Projects</OutboundLink>\r\n                        {/*<Link to=\"/certifications\">Certifications</Link>*/}\r\n                        <OutboundLink href=\"/certifications\">Certifications</OutboundLink>\r\n                        {/*<Link to=\"/achievements\">Achievements</Link>*/}\r\n                        <OutboundLink href=\"/achievements\">Achievements</OutboundLink>\r\n                        <OutboundLink href=\"/sandun_sameera_cv.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">CV</OutboundLink>\r\n                        {/*<Link to=\"/about\">About</Link>*/}\r\n                        <OutboundLink href=\"/about\">About</OutboundLink>\r\n                        {/*<Link className=\"officeHours\" to=\"/officehours\">Office Hours</Link>*/}\r\n                    </div>\r\n                    <main>\r\n                        {children}\r\n                    </main>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport \"../styles/pages/about.scss\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\nimport Layout from \"../components/layout\"\r\n\r\nconst AboutPage = () => {\r\n    return (\r\n        <Layout>\r\n            <div className=\"aboutLayout section-wrapper\">\r\n                <div className=\"section-title\">\r\n                    <h1>About</h1>\r\n                </div>\r\n                <div className=\"section-items\">\r\n                    <div>\r\n                        <div className=\"education-wrapper\">\r\n                            <h2>Education</h2>\r\n                            <div className=\"education-card\">\r\n                                <div className=\"img-container ucsc-mal\">\r\n                                    <StaticImage\r\n                                        src=\"../images/ucsc.jpg\"\r\n                                        alt=\"UCSC\"\r\n                                        placeholder=\"blurred\"\r\n                                        objectFit=\"contain\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"card-content\">\r\n                                    <h3>University of Colombo School of Computing</h3>\r\n                                    <h3>B.Sc in Information Systems</h3>\r\n                                    <span className=\"tags-text\">Second Upper Class with a GPA of 3.34/4.0 </span><br/>\r\n                                    <span className=\"date-text\">Feb. 2018 - Feb. 2021</span><br/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"education-card\">\r\n                                <div className=\"img-container ucsc-mal\">\r\n                                    <StaticImage\r\n                                        src=\"../images/TCC.jpg\"\r\n                                        alt=\"Telijjawila Central College\"\r\n                                        placeholder=\"blurred\"\r\n                                        objectFit=\"contain\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"card-content\">\r\n                                    <h3>Telijjawila Central College</h3>\r\n                                    <span className=\"tags-text\">G.C.E. Advance Level Examination - Physical Science Stream</span><br/>\r\n                                    <span className=\"date-text\">Jan. 2007 - Dec. 2015</span><br/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Hobbies and Interests</h2>\r\n                        <ul>\r\n                            <li>Cricketer</li>\r\n                            <li>Gamer</li>\r\n                            <li>Dreams about traveling</li>\r\n                            <li>Likes food(can't cook)</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AboutPage\r\n","","","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_interopRequireDefault","require","exports","__esModule","OutboundLink","_extends2","_objectWithoutPropertiesLoose2","_react","_propTypes","_excluded","default","forwardRef","_ref","ref","children","props","createElement","onClick","e","redirect","button","altKey","ctrlKey","metaKey","shiftKey","defaultPrevented","target","toLowerCase","window","gtag","event_category","event_label","href","transport_type","event_callback","document","location","propTypes","string","func","s","l","u","d","console","warn","c","message","t","h","b","map","src","width","join","g","lastIndexOf","a","slice","length","p","layout","i","r","o","height","sourceMetadata","breakpoints","aspectRatio","formats","n","Math","round","m","generateImageSource","filename","format","fit","options","f","pluginName","k","reporter","E","M","backgroundColor","S","placeholderURL","Error","N","Set","size","has","delete","add","x","Object","entries","filter","outputPixelDensities","v","y","sizes","presentationWidth","presentationHeight","unscaledWidth","w","I","sources","W","forEach","Boolean","find","fallback","srcSet","push","type","j","images","placeholder","Array","from","concat","sort","min","includes","Number","MAX_SAFE_INTEGER","max","GATSBY___IMAGE","gatsbyImageData","gatsbyImage","childImageSharp","baseUrl","urlBuilder","sourceWidth","sourceHeight","media","image","process","env","NODE_ENV","apply","R","_","loading","alt","shouldLoad","decoding","A","key","isRequired","bool","displayName","exact","arrayOf","oneOfType","O","T","z","MainImage","Fragment","L","q","dangerouslySetInnerHTML","__html","C","style","paddingTop","maxWidth","display","role","position","D","P","H","F","NativeScriptLoading","replace","B","as","className","class","imgClassName","imgStyle","objectFit","objectPosition","overflow","verticalAlign","top","left","bottom","right","opacity","transition","transform","willChange","G","V","__imageData","__error","U","GatsbyImageServer","number","call","arguments","X","Y","GatsbyImage","Placeholder","StaticImage","generateImageData","getImage","getImageData","getLowResolutionImageURL","getSrc","getSrcSet","withArtDirection","preserveCamelCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","toUpperCase","camelCase","input","isArray","TypeError","assign","pascalCase","postProcess","charAt","trim","hasUpperCase","p1","module","React","PropTypes","Link","Helmet","Layout","htmlAttributes","lang","charSet","name","rel","node","AboutPage"],"sourceRoot":""}